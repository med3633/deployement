server {
        listen 80;
        listen [::]:80;
        server_name testt2.ddns.net;

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name testt2.ddns.net;

        server_tokens off;
        ssl_certificate /etc/letsencrypt/live/testt2.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/testt2.ddns.net/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
                try_files $uri @frontend;
        }
        location @frontend {
                proxy_pass http://frontend:3000;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                # enable strict transport security only if you understand the implications
        }

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        location /api {
                try_files $uri @backend/api;
        }
        location @backend {
                proxy_pass http://backend:8000;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                # enable strict transport security only if you understand the implications
        }

}

# upstream api {
#     server :8000;
# }

# server {
#     listen 80;
#     server_name khedma.site www.khedma.site;

#     # Redirect to HTTPS
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name khedma.site www.khedma.site;

#     # SSL certificate configuration
#     ssl_certificate /etc/letsencrypt/live/khedma.site/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/khedma.site/privkey.pem;

#     # Other SSL configurations...

#     location / {
#         root /var/www/reactjs;
#         index index.html;

#         try_files $uri $uri/ /index.html;
#     }

#     location /api/ {
#         proxy_pass http://api/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Additional configurations for serving other static files or media if needed
#     location /static/ {
#         alias /app/django/khedma/build/static/;
#     }

#     location /media/ {
#         alias /app/django/khedma/build/media/;
#     }
# }
